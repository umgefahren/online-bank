generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model User {
  userId       Int      @id @default(autoincrement())
  firstName    String
  lastName     String
  userName     String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  ledgers      Ledger[]
}

model Ledger {
  ledgerId             Int            @id @default(autoincrement())
  usersUserId          Int
  owner                User           @relation(references: [userId], fields: [usersUserId])
  OutgoingLedgerRecord LedgerRecord[] @relation("Outgoing ledger records")
  IncomingLedgerRecord LedgerRecord[] @relation("Incoming ledger records")
  createdAt            DateTime       @default(now())
  name                 String
  description          String
  uuid                 String         @unique @default(uuid())
  balance              Float          @default(0)
}

model LedgerRecord {
  ledgerRecordId           Int      @id @default(autoincrement())
  associatedOutgoingLedger Ledger   @relation("Outgoing ledger records", references: [ledgerId], fields: [associatedOutgoingId])
  associatedOutgoingId     Int
  associatedIncomingLedger Ledger   @relation("Incoming ledger records", references: [ledgerId], fields: [associatedIncomingId])
  associatedIncomingId     Int
  amount                   Float
  description              String
  issuedAt                 DateTime @default(now())
}
